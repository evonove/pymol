PyMOL>load dat/pept.pkl
 Executive: object "pept" created.
PyMOL>print cmd.get_names()
['pept']
PyMOL>create cpy=(pept)
 Selector: found 198 atoms.
 Executive: object "cpy" created.
PyMOL>create pc1=(resi 1 and pept)
 Selector: found 12 atoms.
 Executive: object "pc1" created.
PyMOL>create pc2=(resi 2 and pept)
 Selector: found 10 atoms.
 Executive: object "pc2" created.
PyMOL>create pc3=(resi 3 and pept)
 Selector: found 10 atoms.
 Executive: object "pc3" created.
PyMOL>create pc4=(resi 4 and pept)
 Selector: found 24 atoms.
 Executive: object "pc4" created.
PyMOL>create pc5=(resi 5 and pept)
 Selector: found 17 atoms.
 Executive: object "pc5" created.
PyMOL>create pc6=(resi 6 and pept)
 Selector: found 19 atoms.
 Executive: object "pc6" created.
PyMOL>create pc7=(resi 7 and pept)
 Selector: found 7 atoms.
 Executive: object "pc7" created.
PyMOL>create pc8=(resi 8 and pept)
 Selector: found 15 atoms.
 Executive: object "pc8" created.
PyMOL>create pc9=(resi 9 and pept)
 Selector: found 19 atoms.
 Executive: object "pc9" created.
PyMOL>create pc10=(resi 10 and pept)
 Selector: found 16 atoms.
 Executive: object "pc10" created.
PyMOL>create pc11=(resi 11 and pept)
 Selector: found 24 atoms.
 Executive: object "pc11" created.
PyMOL>create pc12=(resi 12 and pept)
 Selector: found 10 atoms.
 Executive: object "pc12" created.
PyMOL>create pc13=(resi 13 and pept)
 Selector: found 15 atoms.
 Executive: object "pc13" created.
PyMOL>create chk = (pc1 | pc2 | pc3 | pc4 | pc5 | pc6 | pc7 | pc8 | pc9 | pc10 | pc11 | pc12 | pc13 )
 Selector: found 198 atoms.
 Executive: object "chk" created.
PyMOL>print cmd.get_names()
['pept', 'cpy', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8', 'pc9', 'pc10', 'pc11', 'pc12', 'pc13', 'chk']
PyMOL>delete pc*
PyMOL>print cmd.get_names()
['pept', 'cpy', 'chk']
PyMOL>save cmp/C0080create.1.pdb,(cpy and resi 4:6)
 Save: wrote "cmp/C0080create.1.pdb".
PyMOL>save cmp/C0080create.2.pdb,(chk and resi 4:6)
 Save: wrote "cmp/C0080create.2.pdb".
PyMOL>dele all
PyMOL>load dat/ligs3d.sdf
 ObjectMoleculeReadStr: read through molecule 1.
 ObjectMoleculeReadStr: read through molecule 2.
 ObjectMoleculeReadStr: read through molecule 3.
 ObjectMoleculeReadStr: read through molecule 4.
 ObjectMoleculeReadStr: read through molecule 5.
 ObjectMoleculeReadStr: read through molecule 6.
 ObjectMoleculeReadStr: read through molecule 7.
 ObjectMoleculeReadStr: read through molecule 8.
 ObjectMoleculeReadStr: read through molecule 9.
 ObjectMoleculeReadStr: read through molecule 10.
 ExecutiveLoad: "dat/ligs3d.sdf" loaded as "ligs3d", through state 10.
PyMOL>load dat/il2.pdb
 CmdLoad: "dat/il2.pdb" loaded as "il2".
PyMOL>create cpy,il2
 Selector: found 2084 atoms.
 Executive: object "cpy" created.
PyMOL>print cmd.count_states("il2")
1
PyMOL>print cmd.count_states("ligs3d")
10
PyMOL>print cmd.count_states("cpy")
1
PyMOL>create tst2,ligs3d, 5, 3
 Selector: found 32 atoms.
 Executive: object "tst2" created.
PyMOL>print cmd.count_states("tst2")
3
PyMOL>print cmd.count_atoms("tst2 and state 1")
0
PyMOL>print cmd.count_atoms("tst2 and state 2")
0
PyMOL>print cmd.count_atoms("tst2 and state 3")
32
PyMOL>print cmd.count_atoms("ligs3d and state 3")
33
PyMOL>print cmd.count_atoms("ligs3d and state 5")
32
PyMOL>print cmd.count_atoms("tst2 and state 5")
0
PyMOL>dele all
PyMOL>load dat/ligs3d.sdf
 ObjectMoleculeReadStr: read through molecule 1.
 ObjectMoleculeReadStr: read through molecule 2.
 ObjectMoleculeReadStr: read through molecule 3.
 ObjectMoleculeReadStr: read through molecule 4.
 ObjectMoleculeReadStr: read through molecule 5.
 ObjectMoleculeReadStr: read through molecule 6.
 ObjectMoleculeReadStr: read through molecule 7.
 ObjectMoleculeReadStr: read through molecule 8.
 ObjectMoleculeReadStr: read through molecule 9.
 ObjectMoleculeReadStr: read through molecule 10.
 ExecutiveLoad: "dat/ligs3d.sdf" loaded as "ligs3d", through state 10.
PyMOL>create tmp, ligs3d, 0, 4
 Selector: found 337 atoms.
 Executive: object "tmp" created.
PyMOL>count_states
 cmd.count_states: 13 states.
PyMOL>disable
PyMOL>enable tmp
PyMOL>count_states
 cmd.count_states: 13 states.
