PyMOL>load dat/pept.pdb, mol1
 CmdLoad: "dat/pept.pdb" loaded as "mol1".
PyMOL>load dat/pept.pdb, mol2
 CmdLoad: "dat/pept.pdb" loaded as "mol2".
PyMOL>load dat/pept.pdb, mol3
 CmdLoad: "dat/pept.pdb" loaded as "mol3".
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  0.00  0.00  0.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>translate [2,3,4], object=mol2, object_mode=1
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  5.38  0.00  5.38 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>matrix= cmd.get_object_matrix("mol2")
PyMOL>cmd.transform_object("mol3",matrix, homogenous=1)
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  5.38  5.38  0.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dele mol3
PyMOL>load dat/pept.pdb,mol3
 CmdLoad: "dat/pept.pdb" loaded as "mol3".
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  5.38  0.00  5.38 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>matrix_transfer mol1, mol3
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  5.38  0.00  5.38 ]
PyMOL>matrix_transfer mol2, mol3
PyMOL>dump_lst((cmd.get_distance("mol1///5/ca","mol2///5/ca"), \
PyMOL>cmd.get_distance("mol1///5/ca","mol3///5/ca"), \
PyMOL>cmd.get_distance("mol2///5/ca","mol3///5/ca")))
[  5.38  5.38  0.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol1"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol2"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("mol3"))
[  1.00  0.00  0.00  2.00  
   0.00  1.00  0.00  3.00  
   0.00  0.00  1.00  4.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dele all
PyMOL>load ../data/tut/1hpv.pdb
HEADER    HYDROLASE (ACID PROTEINASE)             18-NOV-94   1HPV      1HPV   2
COMPND    HIV-1 PROTEASE (E.C.3.4.23.-) COMPLEXED WITH VX-478           1HPV   3
COMPND   2 (3(S)-N-(3-TETRAHYDROFURANYLOXYCARBONYL) AMINO-1-            1HPV   4
COMPND   3 (N,N-ISOBUTYL,4-AMINOBENZENESULFONYL) AMINO-2-(S)-HYDROXY-   1HPV   5
COMPND   4 4-PHENYLBUTANE)                                              1HPV   6
 ObjectMolecule: Read secondary structure assignments.
 ObjectMolecule: Read crystal symmetry information.
 Symmetry: Found 6 symmetry operators.
 CmdLoad: "../data/tut/1hpv.pdb" loaded as "1hpv".
PyMOL>create ligand, organic
 Selector: found 35 atoms.
 Executive: object "ligand" created.
PyMOL>create protein, polymer
 Selector: found 1516 atoms.
 Executive: object "protein" created.
PyMOL>delete 1hpv
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/protein/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/protein/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /protein/1HPV/B/VAL`82/CB")))
[  6.86  5.47  8.86 ]
PyMOL>translate [2,3,4], object=protein, object_mode=1
PyMOL>rotate x, 20, object=protein, object_mode=1
PyMOL>rotate y, 40, object=protein, object_mode=1
PyMOL>rotate z, 90, object=protein, object_mode=1
PyMOL>translate [4,5,6], object=protein, object_mode=1
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/protein/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/protein/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /protein/1HPV/B/VAL`82/CB")))
[ 22.69 18.69 18.07 ]
PyMOL>matrix_transfer protein, ligand
PyMOL>dump_mat(cmd.get_object_matrix("protein"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("ligand"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/protein/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/protein/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /protein/1HPV/B/VAL`82/CB")))
[  6.86  5.47  8.86 ]
PyMOL>load ../data/tut/1hpv.pdb, copy
HEADER    HYDROLASE (ACID PROTEINASE)             18-NOV-94   1HPV      1HPV   2
COMPND    HIV-1 PROTEASE (E.C.3.4.23.-) COMPLEXED WITH VX-478           1HPV   3
COMPND   2 (3(S)-N-(3-TETRAHYDROFURANYLOXYCARBONYL) AMINO-1-            1HPV   4
COMPND   3 (N,N-ISOBUTYL,4-AMINOBENZENESULFONYL) AMINO-2-(S)-HYDROXY-   1HPV   5
COMPND   4 4-PHENYLBUTANE)                                              1HPV   6
 ObjectMolecule: Read secondary structure assignments.
 ObjectMolecule: Read crystal symmetry information.
 Symmetry: Found 6 symmetry operators.
 CmdLoad: "../data/tut/1hpv.pdb" loaded as "copy".
PyMOL>create copy_ligand, copy and organic
 Selector: found 35 atoms.
 Executive: object "copy_ligand" created.
PyMOL>create copy_protein, copy and polymer
 Selector: found 1516 atoms.
 Executive: object "copy_protein" created.
PyMOL>create copy_protein2, copy and polymer
 Selector: found 1516 atoms.
 Executive: object "copy_protein2" created.
PyMOL>delete copy
PyMOL>matrix_transfer protein, copy_protein2
PyMOL>fit copy_protein, protein
 Executive: RMS =    0.000 (1516 to 1516 atoms)
PyMOL>dump_mat(cmd.get_object_matrix("protein"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("copy_protein"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("copy_protein2"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>load ../data/tut/1hpv.pdb, target
HEADER    HYDROLASE (ACID PROTEINASE)             18-NOV-94   1HPV      1HPV   2
COMPND    HIV-1 PROTEASE (E.C.3.4.23.-) COMPLEXED WITH VX-478           1HPV   3
COMPND   2 (3(S)-N-(3-TETRAHYDROFURANYLOXYCARBONYL) AMINO-1-            1HPV   4
COMPND   3 (N,N-ISOBUTYL,4-AMINOBENZENESULFONYL) AMINO-2-(S)-HYDROXY-   1HPV   5
COMPND   4 4-PHENYLBUTANE)                                              1HPV   6
 ObjectMolecule: Read secondary structure assignments.
 ObjectMolecule: Read crystal symmetry information.
 Symmetry: Found 6 symmetry operators.
 CmdLoad: "../data/tut/1hpv.pdb" loaded as "target".
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/target/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/target/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /target/1HPV/B/VAL`82/CB")))
[ 14.32 17.77 18.33 ]
PyMOL>dump_mat(cmd.get_object_matrix("ligand"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>matrix_transfer target, ligand
PyMOL>dump_mat(cmd.get_object_matrix("ligand"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/target/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/target/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /target/1HPV/B/VAL`82/CB")))
[  6.86  5.47  8.86 ]
PyMOL>dump_mat(cmd.get_object_matrix("protein"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>fit protein, target
 Executive: RMS =    0.000 (1516 to 1516 atoms)
PyMOL>dump_mat(cmd.get_object_matrix("protein"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_mat(cmd.get_object_matrix("ligand"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/protein/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/protein/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /protein/1HPV/B/VAL`82/CB")))
[  6.86  5.47  8.86 ]
PyMOL>matrix_transfer protein, ligand
PyMOL>dump_lst((cmd.get_distance("ligand////s1","/protein/1HPV/B/ILE`84/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/C4","/protein/1HPV/B/ILE`50/CB"), \
PyMOL>cmd.get_distance("/ligand/1HPV//478`200/O3"," /protein/1HPV/B/VAL`82/CB")))
[  6.86  5.47  8.86 ]
PyMOL>dump_lst((cmd.get_distance("/target/1HPV/B/ILE`84/CB","/copy_protein2/1HPV/B/ILE`84/CB"),))
[ 19.55 ]
PyMOL>dump_mat(cmd.get_object_matrix("copy_protein2"))
[  0.00 -0.94  0.34 30.89  
   0.77  0.22  0.60 11.28  
  -0.64  0.26  0.72 13.10  
   0.00  0.00  0.00  1.00 ]
PyMOL>matrix_reset copy_protein2
PyMOL>dump_mat(cmd.get_object_matrix("copy_protein2"))
[  1.00  0.00  0.00  0.00  
   0.00  1.00  0.00  0.00  
   0.00  0.00  1.00  0.00  
   0.00  0.00  0.00  1.00 ]
PyMOL>dump_lst((cmd.get_distance("/target/1HPV/B/ILE`84/CB","/copy_protein2/1HPV/B/ILE`84/CB"),))
[  0.00 ]
