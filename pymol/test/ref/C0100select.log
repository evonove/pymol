PyMOL>load dat/tiny.pdb
 CmdLoad: "dat/tiny.pdb" loaded as "tiny".
PyMOL>load dat/il2.pdb
 CmdLoad: "dat/il2.pdb" loaded as "il2".
PyMOL>print cmd.get_names()
['tiny', 'il2']
PyMOL>select tst = (all)
 Selector: selection "tst" defined with 2121 atoms.
PyMOL>select tst = (none)
 Selector: selection "tst" defined with 0 atoms.
PyMOL>select tst = (name c)
 Selector: selection "tst" defined with 129 atoms.
PyMOL>dele tst
PyMOL>select tst = (segi e)
 Selector: selection "tst" defined with 9 atoms.
PyMOL>select tst = (all)
 Selector: selection "tst" defined with 2121 atoms.
PyMOL>select (segi '')
 Selector: selection "sel01" defined with 2112 atoms.
PyMOL>select (name ca,c,n,o)
 Selector: selection "sel02" defined with 515 atoms.
PyMOL>select (n;ca,c)
 Selector: selection "sel03" defined with 257 atoms.
PyMOL>select (resn pro)
 Selector: selection "sel04" defined with 56 atoms.
PyMOL>select (r;pro)
 Selector: selection "sel05" defined with 56 atoms.
PyMOL>select (chain c,e)
 Selector: selection "sel06" defined with 36 atoms.
PyMOL>select (c;c,e)
 Selector: selection "sel07" defined with 36 atoms.
PyMOL>select (resi 100)
 Selector: selection "sel08" defined with 15 atoms.
PyMOL>select (i;100)
 Selector: selection "sel09" defined with 15 atoms.
PyMOL>select (id 50)
 Selector: selection "sel10" defined with 1 atoms.
PyMOL>select (byres id 50)
 Selector: selection "sel11" defined with 22 atoms.
PyMOL>select (alt '')
 Selector: selection "sel12" defined with 2121 atoms.
PyMOL>select (tiny)
 Selector: selection "sel13" defined with 37 atoms.
PyMOL>select (tiny or il2)
 Selector: selection "sel14" defined with 2121 atoms.
PyMOL>select (tiny | il2)
 Selector: selection "sel15" defined with 2121 atoms.
PyMOL>select (vis)
 Selector: selection "sel16" defined with 2121 atoms.
PyMOL>hide (tiny)
PyMOL>select (vis)
 Selector: selection "sel17" defined with 2084 atoms.
PyMOL>print cmd.get_names('all')
['tiny', 'il2', 'tst', 'sel01', 'sel02', 'sel03', 'sel04', 'sel05', 'sel06', 'sel07', 'sel08', 'sel09', 'sel10', 'sel11', 'sel12', 'sel13', 'sel14', 'sel15', 'sel16', 'sel17']
PyMOL>delete sel*
PyMOL>print cmd.get_names('all')
['tiny', 'il2', 'tst']
PyMOL>select foo = (name c)
 Selector: selection "foo" defined with 129 atoms.
PyMOL>select fie = (name n,c)
 Selector: selection "fie" defined with 257 atoms.
PyMOL>select (foo and not fie)
 Selector: selection "sel18" defined with 0 atoms.
PyMOL>select (fie &! foo)
 Selector: selection "sel19" defined with 128 atoms.
PyMOL>select foe = (tiny a; 30)
 Selector: selection "foe" defined with 105 atoms.
PyMOL>select fum = (il2 and not foe)
 Selector: selection "fum" defined with 1979 atoms.
PyMOL>select (hydro)
 Selector: selection "sel20" defined with 1075 atoms.
PyMOL>select (b<30 and b>0.1)
 Selector: selection "sel21" defined with 362 atoms.
PyMOL>select (q=0.0)
 Selector: selection "sel22" defined with 9 atoms.
PyMOL>select (q=1.0)
 Selector: selection "sel23" defined with 2112 atoms.
PyMOL>select (b=0.0)
 Selector: selection "sel24" defined with 1080 atoms.
PyMOL>load dat/pept.pdb
 CmdLoad: "dat/pept.pdb" loaded as "pept".
PyMOL>select tst,pept within 5 of tiny
 Selector: selection "tst" defined with 0 atoms.
PyMOL>select tst,pept within 50 of tiny
 Selector: selection "tst" defined with 67 atoms.
PyMOL>select tst, pept w. 1 of pept
 Selector: selection "tst" defined with 107 atoms.
PyMOL>print cmd.select("(none)")
0
PyMOL>dele all
PyMOL>load dat/pept.pdb,mult
 CmdLoad: "dat/pept.pdb" loaded as "mult".
PyMOL>load dat/il2.pdb,mult
 CmdLoad: "dat/il2.pdb" appended into object "mult", state 2.
PyMOL>frame 1
PyMOL>select tst,mult and present
 Selector: selection "tst" defined with 107 atoms.
PyMOL>frame 2
PyMOL>select tst,mult and present
 Selector: selection "tst" defined with 2084 atoms.
PyMOL>select tst,state 1
 Selector: selection "tst" defined with 107 atoms.
PyMOL>select tst,state 2
 Selector: selection "tst" defined with 2084 atoms.
PyMOL>hide
PyMOL>show sph,name c
PyMOL>select tst,present and vis
 Selector: selection "tst" defined with 126 atoms.
PyMOL>frame 1
PyMOL>select tst,present and vis
 Selector: selection "tst" defined with 13 atoms.
PyMOL>dele all
PyMOL>load dat/pept.pdb
 CmdLoad: "dat/pept.pdb" loaded as "pept".
PyMOL>indicate name ca
PyMOL>count_atoms indicate
 count_atoms: 13 atoms
PyMOL>indicate name *c*
PyMOL>count_atoms indicate
 count_atoms: 69 atoms
PyMOL>indicate (name *c*,*n*)
PyMOL>count_atoms indicate
 count_atoms: 86 atoms
PyMOL>indicate (name *c*+*n*)
PyMOL>count_atoms indicate
 count_atoms: 86 atoms
PyMOL>indicate name *G
PyMOL>count_atoms indicate
 count_atoms: 9 atoms
PyMOL>indicate */*G
PyMOL>count_atoms indicate
 count_atoms: 9 atoms
PyMOL>indicate rank -3+5+10-23+7+40-
PyMOL>count_atoms indicate
 count_atoms: 87 atoms
PyMOL>indicate id -3+5+10-23+7+40-
PyMOL>count_atoms indicate
 count_atoms: 87 atoms
PyMOL>indicate index -3+5+10-23+7+40-
PyMOL>count_atoms indicate
 count_atoms: 87 atoms
PyMOL>dele all
PyMOL>load dat/1tii.pdb
HEADER    ENTEROTOXIN                             20-MAR-96   1TII
TITLE     ESCHERICHIA COLI HEAT LABILE ENTEROTOXIN TYPE IIB
COMPND    MOL_ID: 1;
COMPND   2 MOLECULE: HEAT LABILE ENTEROTOXIN TYPE IIB;
COMPND   3 CHAIN: D, E, F, G, H, A, C;
COMPND   4 SYNONYM: LT-IIB;
COMPND   5 ENGINEERED: YES;
COMPND   6 OTHER_DETAILS: LATENT/INACTIVE FORM
 ObjectMolecule: Read secondary structure assignments.
 ObjectMolecule: Read crystal symmetry information.
 Symmetry: Found 6 symmetry operators.
 CmdLoad: "dat/1tii.pdb" loaded as "1tii".
PyMOL>indicate A:C+F/10+90+100-/ca+c+n*
PyMOL>count_atoms indicate
 count_atoms: 435 atoms
PyMOL>count_atoms 1TII
 count_atoms: 5684 atoms
PyMOL>count_atoms 1tii
 count_atoms: 5684 atoms
PyMOL>count_atoms HOH`307/ expand 5
 count_atoms: 12 atoms
PyMOL>count_atoms a// c//
 count_atoms: 1769 atoms
PyMOL>count_atoms a// c// d//
 count_atoms: 2509 atoms
PyMOL>count_atoms (a// c//) d//
 count_atoms: 2509 atoms
PyMOL>count_atoms a// c//&none
 count_atoms: 1479 atoms
PyMOL>count_atoms c//&none a//
 count_atoms: 1479 atoms
PyMOL>count_atoms c//&none (a//&none a//)
 count_atoms: 1479 atoms
PyMOL>count_atoms (c//&none) a// (a//&none)
 count_atoms: 1479 atoms
PyMOL>count_atoms (a// (d// c//)) & (e// (b// a//))
 count_atoms: 1479 atoms
