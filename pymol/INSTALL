----------------------------------------------------------------------
PyMOL (C) 1998-2001 by Warren L. DeLano of DeLano Scientific.
http://www.pymol.org       EMAIL: warren@delanoscientific.com
----------------------------------------------------------------------
INSTALLATION AND COMPILATION GUIDE

WARNING: You will need some basic knowledge of Makefiles, compilation
   flags, libraries, python, environment variables, and paths in order
   to compile PyMOL.  If you don't feel comfortable with this, then try
   out the MS-Window's version, which you can download from the WEB
   site.

The following instructions assume you are installing PyMOL in your
home directory.  You can of course put it anywhere, but you will need
to replace "$HOME" with an appropriate path.

STEP (1) 

A compiled copy of the external dependencies package ("ext") is
required, but only needs to be downloaded once (10 MB).  This package
contains everything you will need to run PyMOL all in one place so
that you won't have to hunt down the individual components.

You will need to compile the external dependencies from the sources
(currently in the file "ext-0.51-req-src.tgz"), unless you already
have all of the required components.  See the ext package release
notes for more information.

http://sourceforge.net/project/showfiles.php?group_id=4546

The external dependencies can be installed in an "ext" subdirectory
within the main pymol directory.

   cd $HOME/pymol
   gunzip < ext-0.51-req-src.tgz | tar -xvf -
   cd ext
  **READ INSTALL in that directory for "ext" building instructions.**

Alternatively, you can put the external dependencies into a different
directory and then use a symbolic link to "ext" in the pymol directory.

   cd $HOME
   gunzip < ext-0.51-req-src.tgz | tar -xvf -
   cd $HOME/pymol
   ln -s ../ext ext
   cd ext
  **READ INSTALL in that directory for "ext" building instructions.**

   
STEP(2) 

After you have built the external dependencies, copy Rules.<platform>
to Rules.make and choose options appropriate for your configuration
(here is where experience counts).

Unless you are planning on doing heavy PyMOL development under Linux,
you should choose to make PyMOL as a Python module and not as a
standalone application.

	cd $HOME/pymol
   cp Rules.<platform> Rules.make
	vi ./Rules.make

Also, if you don't have a 3DFX card, get rid of the -D_PYMOL_3DFX
workaround flag.  The nVidia drivers work great, so go get a GeForce2
GTS.

STEP (3) 

"make" to compile.

	cd $HOME/pymol
	make

STEP (4) 
  
Assuming that you chose to build PyMOL as a Python module, copy
pymol.com.template to pymol.com.

Next, edit pymol.com so that PYMOL_PATH points to the correct location
on your system.

	cd $HOME/pymol
   cp pymol.com.template pymol.com
	vi pymol.com
	
 Now you should be all set to run pymol.

	./pymol.com

 I suggest putting a link to this file into a your bin directory, if
you have one.

=======

NOTE: If you ever want to clean up the tree
	"make clean" gets rid of all intermediate objects, etc.
	"make distclean" restores the tree to near "distribution" quality 
       (NOTE it does not remove Rules.make or the "ext" directory/symlink)

