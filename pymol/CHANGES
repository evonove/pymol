Changes Under Consideration

   * Transparency support in rendering (on a per-primitive basis)

   * Generic volume data object (to supplement bricks and maps)

   * Log file generation capability so that you can automatically 
     redo everything you've done just like in Grasp.

   * "Builder" wizard, tied into the fragments subsystem.

   * "Tinker" wizard 

   * Real Edit Menu in Tk

   * making commas optional in PyMOL command arguments -- this would be
     not be the default, but it could be an option

   * adopt standardized conventions for reading user-specific startup
     scripts and initializing external GUI modules.

   * CTRL and CTRL/SHIFT numbers should add aromatic and aliphatic
     ring systems in the builder respectively within the molecular editor.

   * support anisotropic B-factor renditions (ellipsoids)

Current and Ongoing Goals

   * make an ActiveX control which contains core PyMOL for use in web browsers.

   * fill-out object and coord. set specific settings

   * clean-up return conventions in cmd.py

   * complete first-round test-cases

   * feedback conditionals placed around all error output

   * draw all solid representations before drawing lines
     in order to improve antialiasing -- these means that every
     object will need to rendering method calls.

Bugs to Fix

   * superposition system fails with degenerate sets (planer atoms, etc).
     sometimes it just fails period.

Changes up to 0.63

   * Density wizard

   * isomesh meshes now use mesh_width instead of line_width

   * fixed rendering background color bug on BigEndian machines

   * fixed fatal bug with symexp

   * first attempt at support for CCP4's binary maps -- it works with my
     test maps, but will it work with others?

Changes up to 0.62

   * tuned up the util.ray_shadows function, added a "matte" mode for better
     definition of ribbons...

   * integrated workaround for an apparent GCC serial optimizer bug on x86.

Changes up to 0.61

   * bg_color command for easier background adjustments...

   * depth cue menu item and ray_trace_fog linked

   * cartoon_discrete_colors hack for coloring secondary structure properly

   * (ss ...) primitive in selector for selecting helices, etc.

   * many cartoon ribbons improvements -- flat fancy sheets now VERY nice.

Changes up to 0.60

   * third generation fancy helices complete -- revamped interpolation code.

   * ray now takes dimensions for rendering larger than screen

   * unpick and hide selection buttons

   * various new menu items...

   * preparing for GLUT independence on selected platforms...

   * choice of lighting modes for ray-tracing (improved shadows, contrast)

   * settings renames (gl_ambient, dot_radius)

   * settings changes (hash_max) and ray-tracing feedback

   * "help faster"

   * fixed minor glitch with fancy helices

Changes up to 0.59

   * fixed valency display bug...

Changes up to 0.58

   * second generation cartoon ribbons are in -- Goodbye Molscript!

   * fixed half-decade old logic bug in MemoryDebug (blush!).

   * "alter" and "alter_state" given a 50% performance boost

   * added a coarse hydrogen-bond assessment feature (internal)

   * added phi/psi measuring capability

   * fixed selector memory leak on errors

   * added first-generation cartoon riboons 
     (higher-quality to come later)

   * added more specific settings for mesh and ribbon width, etc.

   * add more settings-change side-effects 

   * fix bugs with saving pkl files for state > 1

   * added a concise notation into the selection language 

       model/segment/chain/residue/name
                                 */name
                           residue/
                           residue/name
                     chain/       /     
                     chain/residue/
                     chain/       /name
                     chain/residue/name
             segment/     /       
             segment/     /       /name
             segment/     /residue
             segment/     /residue/name
             segment/chain/       /
             segment/chain/       /name
             segment/chain/residue/
             segment/chain/residue/name
      /model
      /model/       /     /       /name
      /model/       /     /residue
      /model/       /     /residue/name
      /model/       /chain
      /model/       /chain/       /name
      /model/       /chain/residue
      /model/       /chain/residue/name
      /model/segment
      /model/segment/     /       /name
      /model/segment/     /residue
      /model/segment/     /residue/name
      /model/segment/chain
      /model/segment/chain/       /name
      /model/segment/chain/residue

Changes up to 0.57

   * mutagenesis module

   * finished the set_dihedral command

Changes up to 0.56

   * fixed a serious parser bug with the mdo command

Changes up to 0.55

   * fixed and enhanced util.mroll, util.mrock
 
Changes up to 0.54
   
   * ID and elem fields in alter, iterate

Changes up to 0.53

   * change order of drawing within object to improve the
     interaction with antialiased lines.

   * thread safety improvements (fixed bug involving serial 
     manipulations of the same object)

   * bug fix with stick representations

   * fixed minor goof with cmd.dist retval in 0.52

Changes up to 0.52

   * many improvements to online help

   * fixed discrete objects created from PDB files

   * prevented deadlock condition with re-entrant API locks

   * fixed couple of logic-bugs in threading 

   * changed output format from mouse click to a valid selection

   * finished retrofit of the parser.
   
   * formal charge now read from MOL files -- need to consider full
     implementation of MOL file reading capability (incl stereo)

Changes up to 0.51

   * Tcl/Tk GUI now contains a save molecule option

   * Tcl/Tk GUI help improved 

   * performance/quality options in the display menu

   * sphere quality setting
       
   * depth_cue toggle setting (important for low-end PC hardware)
 
   * specular reflections

   * fog setting

Changes up to 0.50

   * can now "pick" C-alphas in the ribbon

   * can now "pick" atoms and bonds in the stick representation 

   * improved clipping plane control command "clip"

   * pym file extension support, for PyMOL-specific .py files

   * better windows NT compatibility

   * settings browser

   * view, view_get, view_set commands

   * Parser now contains a general shortcut handling module to
     further help in reducing typing

   * Slight tweak of the virtual trackball

   * Saving and restoring matrix, center, origin, zoom, clip

   * Internal program output no longer includes python's stderr
   
   * New thread management solution -- simple and stable -- plus 
     it even works (I've even got test cases to prove it)!

   * Fixed memory-trashing bug in the selector

   * Found a workaround for KDE/Gnome/Tkinter/Tcl/Tk problems under linux

   * Created Save option on the Tkinter menu, and added additional file types.

   * TAB-activated filename and command completion (CTRL-D too)

   * Former TAB functionality moved to ESC (text/graphics toggle)

   * Auto-detection of stereo capability

   * Created a robust Feedback control mechanism

   * Eliminated hangs and crashes upon program termination with Win2k/NT.
   
   * "Distances" wizard (internal gui;replace with external version later)

   * "Pair Fit" wizard (internal gui; replace with external version later)

   * Mesh objects now have states, and new meshes are appended.

   * Modified raytrace antialiasing transfer function to improve sharpness.

   * Created alias and extend commands so that python scripts can extend the
   pymol language on the fly.

   * Additional test cases.

   * Parser improved with a new argument parsing subsystem which has a
   better mapping to standard Python arguments.  This has significant
   potential to break existing code if there are any bugs, but I am
   shooting for 100% backwards compatibility. 

Changes up to 0.49

   * Improved editor, hydrogens now auto-deleted.

   * Visible selections.

   * Default mouse actions changed for editing and atom selecting.

   * Callback objects (for use with PyOpenGL) now have extents.

   * get_state and get_frame API functions

Important Changes 0.42-0.48

   Too numerous to list them all...
   
   * Addition of support for PyOpenGL-based GL calls with callback objects

   * Wizard feature, for grabbing mouse input -- still needs flushing out.

